name: Auto Update README (R scripts table)

on:
  push:
    branches: [ main, master ]
    paths:
      - "**/*.R"
      - "README.md"
      - ".github/workflows/auto-readme.yml"
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write   # 👈 允许创建 PR

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (full history for safe PR)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure README exists (with markers)
        run: |
          if [ ! -f "README.md" ]; then
            cat > README.md <<'EOF'
# R-Plot-Code

## 脚本清单（自动生成）
<!-- SCRIPTS_TABLE_START -->
<!-- SCRIPTS_TABLE_END -->
EOF
          else
            if ! grep -q "<!-- SCRIPTS_TABLE_START -->" README.md || ! grep -q "<!-- SCRIPTS_TABLE_END -->" README.md; then
              {
                echo ""
                echo "## 脚本清单（自动生成）"
                echo "<!-- SCRIPTS_TABLE_START -->"
                echo "<!-- SCRIPTS_TABLE_END -->"
              } >> README.md
            fi
          fi

      - name: Build scripts table (bash only)
        run: |
          set -euo pipefail
          TABLE=/tmp/table.md
          printf '| 脚本 | 功能简介 | 主要输入 | 主要输出 | 备注 |\n' > "$TABLE"
          printf '|---|---|---|---|---|\n' >> "$TABLE"
          mapfile -t files < <(git ls-files '**/*.R' | sort -f)
          if [ ${#files[@]} -eq 0 ]; then
            printf '| (未检测到 .R 文件) |  |  |  |  |\n' >> "$TABLE"
          else
            TITLE_RE='Title|标题|功能|Function'
            INPUT_RE='Input|输入'
            OUTPUT_RE='Output|输出'
            NOTE_RE='Note|备注'
            for f in "${files[@]}"; do
              hdr="$(head -n 120 "$f" 2>/dev/null || true)"
              get_val () {
                echo "$hdr" | grep -E -i "^#'?[[:space:]]*($1)[[:space:]]*[:：][[:space:]]*(.+)$" | head -n1 \
                  | sed -E "s/^#'?[[:space:]]*($1)[[:space:]]*[:：][[:space:]]*(.+)$/\2/I"
              }
              title=$(get_val "$TITLE_RE"); input=$(get_val "$INPUT_RE"); output=$(get_val "$OUTPUT_RE"); note=$(get_val "$NOTE_RE")
              esc () { echo "${1//|/\\|}"; }
              printf '| `%s` | %s | %s | %s | %s |\n' \
                "$f" "$(esc "$title")" "$(esc "$input")" "$(esc "$output")" "$(esc "$note")" >> "$TABLE"
            done
          fi
          echo "==== GENERATED TABLE ===="; cat "$TABLE"

      - name: Patch README between markers
        run: |
          set -euo pipefail
          START='<!-- SCRIPTS_TABLE_START -->'
          END='<!-- SCRIPTS_TABLE_END -->'
          start_line=$(grep -n "$START" README.md | head -n1 | cut -d: -f1 || true)
          end_line=$(grep -n "$END" README.md | head -n1 | cut -d: -f1 || true)
          if [ -n "${start_line:-}" ] && [ -n "${end_line:-}" ] && [ "$end_line" -gt "$start_line" ]; then
            head -n "$start_line" README.md > README.new
            cat /tmp/table.md >> README.new
            tail -n +"$end_line" README.md >> README.new
            mv README.new README.md
          else
            {
              echo ""
              echo "## 脚本清单（自动生成）"
              echo "$START"
              cat /tmp/table.md
              echo "$END"
            } >> README.md
          fi

      # 用 PR 提交变更（不直接 push 受保护的 main）
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: auto-update README scripts table"
          title: "chore: auto-update README scripts table"
          body: "Auto-generated by workflow."
          branch: auto/readme-scripts-table
          delete-branch: true
